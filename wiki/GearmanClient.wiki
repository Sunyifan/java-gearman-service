#summary GearmanClient Summary

= !GearmanClient =

The !GearmanClient is the client class for the Gearman distributed job system, providing a framework for sending jobs to one or more Gearman job servers. These jobs are then distributed out to a farm of workers.

= Adding Servers =

When a client receives a job submission, the job is sent to one of the gearman job server registered with the client. A !GearmanClient can communicate with both local and remote servers.

== Local ==
{{{
boolean addServer(GearmanServer srvr)
}}}

Adds a local GearmanServer instance to the list of job servers the client may submit jobs to. Packets are passed directly to servers embedded within the application.

_Paramiters_
  * srvr: The job server running in the local address space

_Return Value_
  * true if and only if the local server was added to the list of job servers to submit jobs to

_Usage Example_
{{{
private final GearmanClient client = ...

public void addLocalServer(GearmanServer server) {
   // Allow the client to communicate with the local server
   client.addServer(server);
}
}}}

== Remote ==
{{{
boolean addServer(InetSocketAddress adrs)
}}}

This method adds the given address to the list of servers the client may submit jobs to. Communication with remote job servers are done using the gearman protocol over a TCP connection.

_Paramiters_
  * adrs: The address of the job server running on the network

_Return Value_
  * true if and only if the remote server address was added to the list of job servers to submit jobs to

_Usage Example_
{{{
private final GearmanClient client = ...

public void addRemoteServer(String host, int port) {
   // Allow the client to communicate with a remote server
   client.addServer(new InetSocketAddress(host, port));
}
}}}

= Removing Servers =

At some point a user may want a !GearmanClient to stop submitting jobs to a specific job server. To do this, we remove the job servers from the client's server list.

== Local Servers ==
{{{
boolean removeServer(GearmanServer srvr)
}}}

This method removes a GearmanServer instance from the client, preventing further job submissions to that server.

_Paramiters_
  * srvr: The job server running in the local address space

_Return Value_
  * true if and only if the local server was removed from the list of job servers.

_Usage Example_
{{{
private final GearmanClient client = ...

public void removeLocalServer(GearmanServer server) {
   // Allow the client to communicate with the local server
   client.removeServer(server);
}
}}}

== Remote ==

== All ==
{{{
void removeAllServers()
}}}

Removes all jobs servers from the !GearmanClient. While the client has no registered job server, the client cannot submit jobs.

_Usage Example_
{{{
private final GearmanClient client = ...
...
// Remove all servers from the client
client.removeAllServers();
}}}

= Server Count =
{{{
int getServerCount()
}}}

This method returns the number of servers the client currently allowed to communicate with.

_Return Value_
  * The number of servers the client is allowed to communicate with

_Usage Example_
{{{
private final GearmanClient client = ...

public void printServerCount() {
   // get the number of servers
   int count = client.getServerCount();

   // print the value
   System.out.println(count);
}
}}}